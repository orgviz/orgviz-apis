syntax = "proto3";

service FrontendToViewGenerator {
	rpc getViewRenderedOrganizationView(GetRenderedOrganizationViewRequest) returns (GetRenderedOrganizationViewResponse);
}

service ViewGeneratorToMetadata {
	rpc getMetadataForOrganization(GetMetadataForOrganizationRequest) returns (GetMetadataForOrganizationResponse);
}

message GetMetadataForOrganizationRequest {}
message GetMetadataForOrganizationResponse {}

service ViewGeneratorToDataInput {

}

message BasicOrganization {
	string name = 1;
}

message Organization {
	// TODO Return list of available filters
}

message FilterOption {
	// TODO
	repeated string teamNames = 1;
}

message OrganizationFilterOptions {
	repeated FilterOption filters = 1;
}

message GetOrganizationRequest {
	Organization Organization = 1;
	OrganizationFilterOptions filterOptions = 2;
}


service ClientToFrontend {
	/*
	This method is basically used to "login", where all the heavy lifting of
	authentication is done using SSO proxy redirects. 
	*/
	rpc getClientInitialSettings(GetClientInitialSettingsRequest) returns (GetClientInitialSettingsResponse);

	rpc getOrganizationList(GetOrganizationListRequest) returns (GetOrganizationListResponse);

	rpc getRenderedOrganizationView(GetRenderedOrganizationViewRequest) returns (GetRenderedOrganizationViewResponse); 
}

message GetClientInitialSettingsRequest {

}

message GetClientInitialSettingsResponse {
	enum InputModeType {
		DIRECT = 0;
		WEBSERVICE = 1;
	}

	repeated InputModeType supportedInputModes = 1;
}

message GetOrganizationListRequest {

}

message GetOrganizationListResponse {
	repeated BasicOrganization organizations = 1;
}

message GetRenderedOrganizationViewRequest {}
message GetRenderedOrganizationViewResponse {}

